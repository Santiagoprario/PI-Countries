{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/Countries/countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './countries.css';\nimport Country from '../Country/Country';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport getCountries from '../../Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Countries = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries);\n  useEffect(() => {\n    dispatch(getCountries());\n  }, []);\n  console.log(countries);\n\n  const showCountries = () => {\n    countries.map(c => /*#__PURE__*/_jsxDEV(Country, {\n      flag: c.flag,\n      name: c.name,\n      continent: c.continent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Countries, \"R7NpiZ/RV9ftBFKTNxAFs1XCDj8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Countries;\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries\n  };\n};\n\nexport default connect(mapStateToProps, null)(Countries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/Countries/countries.js"],"names":["React","useEffect","useState","Country","connect","useDispatch","useSelector","getCountries","Countries","dispatch","countries","state","console","log","showCountries","map","c","flag","name","continent","country","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AAEA,QAAMI,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,SAAS,CAACK,GAAV,CAAcC,CAAC,iBACD,QAAC,OAAD;AACA,MAAA,IAAI,EAAEA,CAAC,CAACC,IADR;AACa,MAAA,IAAI,EAAED,CAAC,CAACE,IADrB;AAGA,MAAA,SAAS,EAAEF,CAAC,CAACG;AAHb;AAAA;AAAA;AAAA;AAAA,YADd;AAOD,GARD;;AAWA,sBACU;AAAA,2BACE;AAAA,gBAEIT,SAAS,CAACK,GAAV,CAAeK,OAAO,IAAI;AACxB;AAAA;AAAA,oBAAKA,OAAO,CAACF;AAAb;AAAA;AAAA;AAAA;AAAA;AACD,OAFD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADV;AAYD,CAlCM;;GAAMV,S;UACMH,W,EACCC,W;;;KAFPE,S;;AAoCb,MAAMa,eAAe,GAAGV,KAAK,IAAI;AAC/B,SAAO;AACLD,IAAAA,SAAS,EAAGC,KAAK,CAACD;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CAACiB,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,SAA/B,CAAf","sourcesContent":["import React , { useEffect, useState} from 'react';\nimport './countries.css';\nimport Country from '../Country/Country';\nimport { connect, useDispatch , useSelector } from 'react-redux';\nimport getCountries from '../../Actions/actions';\n\n\nexport const Countries = () => {\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries);\n\n\n  useEffect(() => {\n    dispatch(getCountries());\n  }, []);\n   \n  console.log(countries)\n\n  const showCountries = () => {\n    countries.map(c => \n                  <Country \n                  flag={c.flag}name={c.name}\n                  \n                  continent={c.continent}\n                  />\n                )\n  }\n   \n\n  return (\n            <div >\n              <ul>\n                  {\n                  countries.map( country => {\n                    <li>{country.name}</li>\n                  })\n                  }  \n              </ul>\n                \n            </div>\n          );   \n}\n\nconst mapStateToProps = state => {\n  return {\n    countries : state.countries\n  }\n}\n\nexport default connect(mapStateToProps, null)(Countries) ;"]},"metadata":{},"sourceType":"module"}