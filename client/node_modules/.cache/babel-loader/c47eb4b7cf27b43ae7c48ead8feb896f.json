{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/detailcountry/detailcountry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllActivities, getDetail } from '../../Actions/actions';\nimport './detailcountry.css';\nimport { Link, useParams } from 'react-router-dom';\nimport formatNumber from '../../Functions/functions';\nimport { Countries } from '../Countries/countries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Detailcountry(id) {\n  _s();\n\n  const dispatch = useDispatch();\n  const details = useSelector(state => state.countriesDetail);\n  const activities = useSelector(state => state.activities);\n  const {\n    idCountry\n  } = useParams();\n  const [state, setState] = useState({\n    nombres: false\n  });\n  console.log(idCountry); // me guardo el id del pais para hacer el pedido de las actividades\n\n  useEffect(() => {\n    dispatch(getDetail(id));\n  }, [id, activities, dispatch]);\n  console.log(activities);\n  let nombres = [];\n\n  const handleActivity = () => {\n    let id = idCountry;\n    let activity = activities ? activities : false;\n    activity.forEach(element => {\n      element.Countries.forEach(ele => {\n        if (ele.idCountry === id) {\n          nombres.push(element.name);\n        }\n      });\n    });\n    setState({ ...state,\n      nombres: nombres\n    });\n    console.log(nombres);\n    return nombres;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"imgflag\",\n          src: details.flag,\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: details.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Codigo Pais: \", details.idCountry]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Capital:\", details.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Continente: \", details.continent, \"H\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Subregion: \", details.subregion, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Area: \", formatNumber(details.area), \" Km\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Poblacion: \", details.population !== 0 ? formatNumber(details.population) : 'No se ha encontrado la Poblacion de este Pais.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Presione el boton para ver las Actividades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: state.nombres.length > 0 ? state.nombres.map(nom => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"listOne\",\n            children: nom\n          }, nom, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 77\n          }, this)) : ' No existen actividades asignadas a este Pais'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleActivity,\n          children: \"Ver Actividades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Regresar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Detailcountry, \"lIj1k6fjw83qCG37rwsFyy6ytgY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n\n_c = Detailcountry;\nexport default Detailcountry; // Ruta de detalle de país: debe contener\n// [x] Los campos mostrados en la ruta principal para cada país (imagen de la bandera, nombre, código de país de 3 letras y continente)\n// [x] Código de país de 3 letras (id)\n// [x] Capital\n// [x] Subregión\n// [x] Área (Mostrarla en km2 o millones de km2)\n// [x] Población\n// [x] Actividades turísticas con toda su información asociada\n\nvar _c;\n\n$RefreshReg$(_c, \"Detailcountry\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/detailcountry/detailcountry.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllActivities","getDetail","Link","useParams","formatNumber","Countries","Detailcountry","id","dispatch","details","state","countriesDetail","activities","idCountry","setState","nombres","console","log","handleActivity","activity","forEach","element","ele","push","name","flag","capital","continent","subregion","area","population","length","map","nom"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react';\nimport { useDispatch , useSelector } from 'react-redux';\nimport { getAllActivities, getDetail } from '../../Actions/actions';\nimport './detailcountry.css'\nimport { Link , useParams} from 'react-router-dom';\nimport formatNumber from '../../Functions/functions';\nimport { Countries } from '../Countries/countries';\n\nexport function Detailcountry (id) {\n  const dispatch = useDispatch();\n  const details = useSelector(state => state.countriesDetail);\n  const activities = useSelector(state =>state.activities);\n  const {idCountry}= useParams();\n  const [state, setState] = useState({\n    nombres : false\n  })\n  \n\n  console.log(idCountry) // me guardo el id del pais para hacer el pedido de las actividades\n  \n  useEffect(() => {\n    dispatch(getDetail(id))\n  },[id, activities, dispatch ])\n\n  console.log(activities)\n\n  let nombres = [];\n\n  const handleActivity =  () => {\n    let id = idCountry;\n    let activity = activities ? activities : false;\n    activity.forEach(element => {\n      element.Countries.forEach(ele => {\n       if(ele.idCountry === id ) {\n         nombres.push(element.name)\n       }\n      })\n    });\n    setState({\n           ...state,\n           nombres: nombres\n         })\n    console.log(nombres)\n      return nombres ; \n    } \n    \n  \n  \n \n\n\n\n   return (\n            <div className='container'>\n              <div>\n                \n              </div>\n              <div className='box'>\n                <div>\n                  <img className='imgflag' src={details.flag} alt='...'/>\n                </div>\n                <div>\n                  <h1 className='title' >{details.name}</h1>\n                  <hr />\n                  <h4>Codigo Pais: {details.idCountry}</h4>\n                  <h4>Capital:{details.capital}</h4>\n                  <h4>Continente: {details.continent}H</h4>\n                  <h4>Subregion: {details.subregion} </h4>\n                  <h4>Area: {formatNumber(details.area)} Km<sup>2</sup></h4>\n                  <h4>Poblacion: {details.population !==0 ? formatNumber(details.population) : 'No se ha encontrado la Poblacion de este Pais.'  }</h4>\n                   <h4>Presione el boton para ver las Actividades</h4>\n                   <h4>{state.nombres.length > 0 ? state.nombres.map(nom => <li className='listOne'  key={nom}>{nom}</li>) : ' No existen actividades asignadas a este Pais'}</h4>\n                <button className='btn' onClick={handleActivity}>Ver Actividades</button>\n                </div>\n                \n              </div>\n              <div>\n              <Link to='/home'>\n             <button className='btn' >Regresar</button>\n             </Link>\n             \n             \n             </div>\n            </div>\n          );   \n}\n\n\nexport default Detailcountry ;\n\n\n// Ruta de detalle de país: debe contener\n\n// [x] Los campos mostrados en la ruta principal para cada país (imagen de la bandera, nombre, código de país de 3 letras y continente)\n// [x] Código de país de 3 letras (id)\n// [x] Capital\n// [x] Subregión\n// [x] Área (Mostrarla en km2 o millones de km2)\n// [x] Población\n// [x] Actividades turísticas con toda su información asociada"]},"metadata":{},"sourceType":"module"}