{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/activities/activities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { getAllActivities } from '../../Actions/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Activities = () => {\n  _s();\n\n  const activities = useSelector(state => state.activities);\n  const dispatch = useDispatch();\n  const [estado, setEstado] = useState({\n    initialState\n  });\n  useEffect(() => {\n    dispatch(getAllActivities());\n    return () => {};\n  }, [dispatch]);\n\n  const search = () => {};\n\n  let act = activities;\n  console.log(activities);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      children: activities.map(act => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: act.id,\n        children: act.name\n      }, act.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Activities, \"lKDDpPj/X38xulJJsg0suKj5g7o=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Activities;\n\nconst mapStateToProps = state => ({\n  activities: state.activities\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities);\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/activities/activities.jsx"],"names":["React","useEffect","PropTypes","connect","useSelector","getAllActivities","useDispatch","Activities","activities","state","dispatch","estado","setEstado","useState","initialState","search","act","console","log","map","id","name","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AAACC,IAAAA;AAAD,GAAD,CAApC;AAKJb,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AAEC,WAAO,MAAM,CAEZ,CAFD;AAGH,GANQ,EAMN,CAACK,QAAD,CANM,CAAT;;AASA,QAAMK,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAGA,MAAIC,GAAG,GAAGR,UAAV;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAEI,sBACI;AAAA,2BACG;AAAA,gBAEJA,UAAU,CAACW,GAAX,CAAgBH,GAAG,iBAClB;AAAsB,QAAA,KAAK,EAAEA,GAAG,CAACI,EAAjC;AAAA,kBACEJ,GAAG,CAACK;AADN,SAAcL,GAAG,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AAFI;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArCM;;GAAMb,U;UACUH,W,EACFE,W;;;KAFRC,U;;AAwCb,MAAMe,eAAe,GAAIb,KAAD,KAAY;AAChCD,EAAAA,UAAU,EAAGC,KAAK,CAACD;AADa,CAAZ,CAAxB;;AAIA,MAAMe,kBAAkB,GAAG,EAA3B;AAIA,eAAepB,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { useSelector } from 'react-redux';\nimport { getAllActivities } from '../../Actions/actions';\nimport { useDispatch } from 'react-redux';\n\nexport const Activities = () => {\n    const activities = useSelector(state => state.activities)\n    const dispatch = useDispatch()\n    const [estado, setEstado] = useState({initialState})\n\n\n\n\nuseEffect(() => {\n   dispatch(getAllActivities());\n   \n    return () => {\n        \n    }\n}, [dispatch])\n\n\nconst search = () => {\n\n}\nlet act = activities\n   \nconsole.log(activities)\n\n    return (\n        <div>\n           <select>\n           {                  \n\t\t\t\t\t\t\tactivities.map( act => (\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<option  key={act.id} value={act.id}>                                   \n\t\t\t\t\t\t\t\t\t{act.name}                            \n\t\t\t\t\t\t\t\t</option>\t\t\t\t\t\t\t\t        \n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n           </select>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    activities : state.activities\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities)\n"]},"metadata":{},"sourceType":"module"}