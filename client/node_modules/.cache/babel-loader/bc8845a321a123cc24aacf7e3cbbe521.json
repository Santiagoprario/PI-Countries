{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/Addactivities/addactivities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './addactivities.css';\nimport axios from 'axios';\nimport { getAllCountries } from '../../Actions/actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddActivity(props) {\n  _s();\n\n  const activities = useSelector(state => state.activities);\n  const paises = useSelector(state => state.allcountries);\n  const [input, setInput] = useState({\n    name: '',\n    difficulty: 1,\n    duration: 1,\n    season: '',\n    countries: []\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllCountries());\n    console.log('entro');\n    return;\n  }, []);\n\n  const handleInputChange = function (e) {\n    e.preventDefault();\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const clean = e => {\n    setInput({ ...input,\n      countries: []\n    });\n  };\n\n  const submit = function () {\n    let {\n      name,\n      difficulty,\n      duration,\n      season,\n      countries\n    } = input;\n    axios.post('http://localhost:3001/activity', {\n      name,\n      difficulty,\n      duration,\n      season,\n      countries\n    }).then(r => console.log(r));\n  };\n\n  const addCountry = e => {\n    setInput({ ...input,\n      [e.target.name]: [...input.countries, e.target.value]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title-act\",\n          children: \"Agregar Actividad Turistica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Nombre de la Actividad\",\n        type: \"text\",\n        name: \"name\",\n        value: input.name,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Dificultad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"range\",\n        name: \"difficulty\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        value: input.difficulty,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Duracion de la Actividad\",\n        type: \"number\",\n        name: \"duration\",\n        min: \"1\",\n        max: \"24\",\n        value: input.duration,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input\",\n        name: \"season\",\n        value: input.season,\n        defaultValue: \"DISABLED\",\n        onChange: e => handleInputChange(e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DISABLED\",\n          children: \"Seleccione una estacion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"otono\",\n          children: \"Oto\\xF1o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"invierno\",\n          children: \"Invierno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"primavera\",\n          children: \"Primavera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verano\",\n          children: \"Verano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input\",\n        children: \"Selecciona los paises a asignarle la actividad \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"input\",\n        name: \"countries\",\n        onChange: addCountry,\n        defaultValue: \"DEFAULT\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          name: \"DEFAULT\",\n          value: \"\",\n          children: \"Paises...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), paises && paises.map(pais => /*#__PURE__*/_jsxDEV(\"option\", {\n          name: input.countries,\n          value: pais.idCountry,\n          children: pais.name\n        }, pais.idCountry, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        name: \"countries\",\n        value: input.countries,\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn1\",\n          onClick: clean,\n          children: \"Limpiar Paises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn1\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddActivity, \"OikMu6InKPz0Al7mddr6TS9WU+c=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AddActivity;\n\nconst mapStateToProps = state => {\n  return {\n    paises: state.allcountries\n  };\n};\n\nexport default connect(mapStateToProps, null)(AddActivity); // Ruta de creación de actividad turística: debe contener\n// [x] Un formulario controlado con los siguientes campos\n// Nombre\n// Dificultad\n// Duración\n// Temporada\n// [ ] Posibilidad de seleccionar/agregar varios países en simultaneo\n// [x] Botón/Opción para crear una nueva actividad turística\n\nvar _c;\n\n$RefreshReg$(_c, \"AddActivity\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/Addactivities/addactivities.js"],"names":["React","useEffect","useState","useDispatch","useSelector","axios","getAllCountries","connect","AddActivity","props","activities","state","paises","allcountries","input","setInput","name","difficulty","duration","season","countries","dispatch","console","log","handleInputChange","e","preventDefault","target","value","clean","submit","post","then","r","addCountry","map","pais","idCountry","mapStateToProps"],"mappings":"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","sourcesContent":["import React , {useEffect , useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './addactivities.css';\nimport axios from 'axios';\nimport { getAllCountries } from '../../Actions/actions';\nimport { connect } from 'react-redux';\n\nexport function  AddActivity(props) {\n  const activities = useSelector(state => state.activities)\n  const paises = useSelector(state => state.allcountries); \n  const [input , setInput] = useState({\n      name: '',\n      difficulty: 1,\n      duration:1,\n      season:'',\n      countries:[]\n    })\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllCountries());\n    console.log('entro')\n    return;\n  },[])\n\n   const handleInputChange = function(e) {\n    e.preventDefault();\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  }\n  const clean = (e) => {\n    setInput({\n      ...input,\n      countries: []\n     })\n  }\n\n  const submit = function () {\n    let { name , difficulty , duration , season , countries } = input;\n    axios.post('http://localhost:3001/activity',\n    { name, difficulty, duration , season , countries })\n    .then(r => \n      console.log(r))\n  }\n  \n  const  addCountry = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]:\n      [...input.countries,\n       e.target.value] \n     })\n    }\n \n  return (\n    <div className='form'>\n    <form onSubmit={submit} className='flex'>\n      <div>\n      <h2 className='title-act'>Agregar Actividad Turistica</h2>\n       <hr />\n      </div>\n\n        <input className='input' placeholder='Nombre de la Actividad' type=\"text\" name='name' value={input.name} onChange={(e) => handleInputChange(e)}/>\n        <label>Dificultad</label>\n        <input className='input' type=\"range\" name=\"difficulty\"  min=\"1\" max=\"5\" step=\"1\" value={input.difficulty}\n         onChange={(e) => handleInputChange(e)}/>\n        <input className='input' placeholder='Duracion de la Actividad' type='number' name='duration' min='1' max='24' value={input.duration} onChange={(e) => handleInputChange(e)}/>\n        \n        <select className='input' name='season' value={input.season} defaultValue='DISABLED' onChange={(e) => handleInputChange(e)}>\n        <option  value='DISABLED'>Seleccione una estacion</option>\n          <option  value='otono'>Otoño</option>\n          <option  value='invierno'>Invierno</option>\n          <option  value='primavera'>Primavera</option>\n          <option  value='verano'>Verano</option>\n        </select >\n        <span className='input'>Selecciona los paises a asignarle la actividad </span>\n\t\t\t\t<select className='input' name='countries' onChange={addCountry} defaultValue='DEFAULT' >\n\t\t\t\t\t<option name='DEFAULT' value=''>                                   \n\t\t\t\t\t\tPaises...                         \n\t\t\t\t\t</option>\n\t\t\t\t\t{\n\t\t\t\t\t\tpaises &&                   \n\t\t\t\t\t\t\tpaises.map( pais => (\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<option name={input.countries} key={pais.idCountry} value={pais.idCountry}>                                   \n\t\t\t\t\t\t\t\t\t{pais.name}                            \n\t\t\t\t\t\t\t\t</option>\t\t\t\t\t\t\t\t        \n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</select>  \n       \n       <input className='input' type=\"text\" name='countries' value={input.countries}  onChange={(e) => handleInputChange(e)}/>\n         <div className='container-button'>  \n       <button className='btn1' onClick={clean}>Limpiar Paises</button>\n     <input className='btn1' type=\"submit\" />\n     </div>\n    </form>\n    </div>\n  )\n }\n\n\n\nconst mapStateToProps = state => {\n  return {\n    paises : state.allcountries\n  }\n}\n\nexport default connect(mapStateToProps, null)(AddActivity)\n\n// Ruta de creación de actividad turística: debe contener\n\n// [x] Un formulario controlado con los siguientes campos\n// Nombre\n// Dificultad\n// Duración\n// Temporada\n// [ ] Posibilidad de seleccionar/agregar varios países en simultaneo\n// [x] Botón/Opción para crear una nueva actividad turística"]},"metadata":{},"sourceType":"module"}