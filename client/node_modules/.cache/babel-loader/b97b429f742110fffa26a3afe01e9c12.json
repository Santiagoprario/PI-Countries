{"ast":null,"code":"function formatNumber(num) {\n  if (!num || num === 'NaN') return '-';\n  if (num === 'Infinity') return '&#x221e;';\n  num = num.toString().replace(/\\$|\\,/g, '');\n  if (isNaN(num)) num = \"0\";\n  num = Math.floor(num * 100 + 0.50000000001);\n  let cents = num % 100;\n  num = Math.floor(num / 100).toString();\n  if (cents < 10) cents = \"0\" + cents;\n\n  for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) num = num.substring(0, num.length - (4 * i + 3)) + '.' + num.substring(num.length - (4 * i + 3));\n\n  return (sign ? '' : '-') + num;\n}\n\nexport default formatNumber;","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Functions/functions.js"],"names":["formatNumber","num","toString","replace","isNaN","Math","floor","cents","i","length","substring","sign"],"mappings":"AAEA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,MAAI,CAACA,GAAD,IAAQA,GAAG,KAAK,KAApB,EAA2B,OAAO,GAAP;AAC3B,MAAIA,GAAG,KAAK,UAAZ,EAAwB,OAAO,UAAP;AACxBA,EAAAA,GAAG,GAAGA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,QAAvB,EAAiC,EAAjC,CAAN;AACA,MAAIC,KAAK,CAACH,GAAD,CAAT,EACIA,GAAG,GAAG,GAAN;AACJA,EAAAA,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,GAAN,GAAY,aAAvB,CAAN;AACA,MAAIM,KAAK,GAAGN,GAAG,GAAG,GAAlB;AACAA,EAAAA,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWL,GAAG,GAAG,GAAjB,EAAsBC,QAAtB,EAAN;AACA,MAAIK,KAAK,GAAG,EAAZ,EACIA,KAAK,GAAG,MAAMA,KAAd;;AACJ,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACL,GAAG,CAACQ,MAAJ,IAAc,IAAID,CAAlB,CAAD,IAAyB,CAApC,CAApB,EAA6DA,CAAC,EAA9D,EACIP,GAAG,GAAGA,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiBT,GAAG,CAACQ,MAAJ,IAAc,IAAID,CAAJ,GAAQ,CAAtB,CAAjB,IAA6C,GAA7C,GAAmDP,GAAG,CAACS,SAAJ,CAAcT,GAAG,CAACQ,MAAJ,IAAc,IAAID,CAAJ,GAAQ,CAAtB,CAAd,CAAzD;;AACJ,SAAQ,CAAEG,IAAD,GAAS,EAAT,GAAc,GAAf,IAAsBV,GAA9B;AACH;;AAED,eAAeD,YAAf","sourcesContent":["\n\nfunction formatNumber(num) {\n    if (!num || num === 'NaN') return '-';\n    if (num === 'Infinity') return '&#x221e;';\n    num = num.toString().replace(/\\$|\\,/g, '');\n    if (isNaN(num))\n        num = \"0\";\n    num = Math.floor(num * 100 + 0.50000000001);\n    let cents = num % 100;\n    num = Math.floor(num / 100).toString();\n    if (cents < 10)\n        cents = \"0\" + cents;\n    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3) ; i++)\n        num = num.substring(0, num.length - (4 * i + 3)) + '.' + num.substring(num.length - (4 * i + 3));\n    return (((sign) ? '' : '-') + num );\n}\n\nexport default formatNumber"]},"metadata":{},"sourceType":"module"}