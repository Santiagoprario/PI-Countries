{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/detailcountry/detailcountry.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { getDetail } from '../../Actions/actions';\nimport './detailcountry.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Detailcountry(id) {\n  _s();\n\n  const dispatch = useDispatch();\n  const details = useSelector(state => state.countriesDetail);\n\n  function formatNumber(num) {\n    if (!num || num == 'NaN') return '-';\n    if (num == 'Infinity') return '&#x221e;';\n    num = num.toString().replace(/\\$|\\,/g, '');\n    if (isNaN(num)) num = \"0\";\n    sign = num == (num = Math.abs(num));\n    num = Math.floor(num * 100 + 0.50000000001);\n    cents = num % 100;\n    num = Math.floor(num / 100).toString();\n    if (cents < 10) cents = \"0\" + cents;\n\n    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) num = num.substring(0, num.length - (4 * i + 3)) + '.' + num.substring(num.length - (4 * i + 3));\n\n    return (sign ? '' : '-') + num + ',' + cents;\n  }\n\n  useEffect(() => {\n    dispatch(getDetail(id));\n    console.log('entro');\n  }, []);\n  console.log(details);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"imgflag\",\n          src: details.flag,\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: details.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Codigo Pais: \", details.idCountry]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Capital:\", details.capital]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Continente: \", details.continent, \"H\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Subregion: \", details.subregion, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Area: \", details.area, \" Km\", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Poblacion: \", formatNumber(details.population)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Regresar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Detailcountry, \"wPGpU5Fy5E+dW5hCTxlj7qD8U3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Detailcountry;\nexport default Detailcountry; // Ruta de detalle de país: debe contener\n// [x] Los campos mostrados en la ruta principal para cada país (imagen de la bandera, nombre, código de país de 3 letras y continente)\n// [x] Código de país de 3 letras (id)\n// [x] Capital\n// [x] Subregión\n// [x] Área (Mostrarla en km2 o millones de km2)\n// [x] Población\n// [ ] Actividades turísticas con toda su información asociada\n\nvar _c;\n\n$RefreshReg$(_c, \"Detailcountry\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/detailcountry/detailcountry.jsx"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","getDetail","Link","Detailcountry","id","dispatch","details","state","countriesDetail","formatNumber","num","toString","replace","isNaN","sign","Math","abs","floor","cents","i","length","substring","console","log","flag","name","idCountry","capital","continent","subregion","area","population"],"mappings":"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","sourcesContent":["import React , { useEffect, useState} from 'react';\nimport { connect, useDispatch , useSelector } from 'react-redux';\nimport { getDetail } from '../../Actions/actions';\nimport './detailcountry.css'\nimport { Link } from 'react-router-dom';\n\nexport function Detailcountry (id) {\n  const dispatch = useDispatch();\n  const details = useSelector(state => state.countriesDetail);\n\n  function formatNumber(num) {\n    if (!num || num == 'NaN') return '-';\n    if (num == 'Infinity') return '&#x221e;';\n    num = num.toString().replace(/\\$|\\,/g, '');\n    if (isNaN(num))\n        num = \"0\";\n    sign = (num == (num = Math.abs(num)));\n    num = Math.floor(num * 100 + 0.50000000001);\n    cents = num % 100;\n    num = Math.floor(num / 100).toString();\n    if (cents < 10)\n        cents = \"0\" + cents;\n    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3) ; i++)\n        num = num.substring(0, num.length - (4 * i + 3)) + '.' + num.substring(num.length - (4 * i + 3));\n    return (((sign) ? '' : '-') + num + ',' + cents);\n}\n\n\n  useEffect(() => {\n    dispatch(getDetail(id))\n    console.log('entro')\n  },[])\n \n  console.log(details)\n\n\n   return (\n            <div className='container'>\n              <div>\n                \n              </div>\n              <div className='box'>\n                <div>\n                  <img className='imgflag' src={details.flag} alt='...'/>\n                </div>\n                <div>\n                  <h1 className='title' >{details.name}</h1>\n                  <hr />\n                  <h4>Codigo Pais: {details.idCountry}</h4>\n                  <h4>Capital:{details.capital}</h4>\n                  <h4>Continente: {details.continent}H</h4>\n                  <h4>Subregion: {details.subregion} </h4>\n                  <h4>Area: {details.area} Km<sup>2</sup></h4>\n                  <h4>Poblacion: {formatNumber(details.population)}</h4>\n                </div>\n              </div>\n              <div>\n              <Link to='/home'>\n             <button className='btn' >Regresar</button>\n             </Link>\n             </div>\n            </div>\n          );   \n}\n\n\nexport default Detailcountry ;\n\n\n// Ruta de detalle de país: debe contener\n\n// [x] Los campos mostrados en la ruta principal para cada país (imagen de la bandera, nombre, código de país de 3 letras y continente)\n// [x] Código de país de 3 letras (id)\n// [x] Capital\n// [x] Subregión\n// [x] Área (Mostrarla en km2 o millones de km2)\n// [x] Población\n// [ ] Actividades turísticas con toda su información asociada"]},"metadata":{},"sourceType":"module"}