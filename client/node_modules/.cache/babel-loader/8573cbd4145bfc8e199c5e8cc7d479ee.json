{"ast":null,"code":"var _jsxFileName = \"/Users/santiagoprario/Desktop/PI-Country/client/src/Components/activities/activities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllActivities } from '../../Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Activities = () => {\n  _s();\n\n  const activities = useSelector(state => state.activities);\n  const dispatch = useDispatch();\n  const [estado, setEstado] = useState({\n    countries: [],\n    activity: {},\n    activities: activities\n  });\n  useEffect(() => {\n    dispatch(getAllActivities());\n  }, [dispatch]);\n\n  const handleInputChange = function (e) {\n    e.preventDefault();\n    setEstado({ ...estado,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(activities);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      children: activities.map(act => /*#__PURE__*/_jsxDEV(\"option\", {\n        name: act.name,\n        value: estado.activity,\n        children: act.name\n      }, act.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Activities, \"CpidGIe1i32oDT8nvpR/hk6gGnA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Activities;\n\nconst mapStateToProps = state => ({\n  activities: state.activities\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities);\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/Users/santiagoprario/Desktop/PI-Country/client/src/Components/activities/activities.jsx"],"names":["React","useEffect","useState","connect","useSelector","useDispatch","getAllActivities","Activities","activities","state","dispatch","estado","setEstado","countries","activity","handleInputChange","e","preventDefault","target","name","value","console","log","map","act","id","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACjCW,IAAAA,SAAS,EAAG,EADqB;AAEjCC,IAAAA,QAAQ,EAAC,EAFwB;AAGjCN,IAAAA,UAAU,EAAEA;AAHqB,GAAD,CAApC;AAMJP,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACF,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;;AAIA,QAAMK,iBAAiB,GAAG,UAASC,CAAT,EAAY;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFlB,KAAD,CAAT;AAID,GANH;;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AAEI,sBACI;AAAA,2BACG;AAAA,gBAEJA,UAAU,CAACe,GAAX,CAAgBC,GAAG,iBAClB;AAAQ,QAAA,IAAI,EAAEA,GAAG,CAACL,IAAlB;AAAqC,QAAA,KAAK,EAAER,MAAM,CAACG,QAAnD;AAAA,kBACEU,GAAG,CAACL;AADN,SAA6BK,GAAG,CAACC,EAAjC;AAAA;AAAA;AAAA;AAAA,cADD;AAFI;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAtCM;;GAAMlB,U;UACUH,W,EACFC,W;;;KAFRE,U;;AAyCb,MAAMmB,eAAe,GAAIjB,KAAD,KAAY;AAChCD,EAAAA,UAAU,EAAGC,KAAK,CAACD;AADa,CAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAG,EAA3B;AAIA,eAAexB,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpB,UAA7C,CAAf","sourcesContent":["import React, { useEffect , useState} from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector , useDispatch } from 'react-redux';\nimport { getAllActivities } from '../../Actions/actions';\n\nexport const Activities = () => {\n    const activities = useSelector(state => state.activities)\n    const dispatch = useDispatch()\n    const [estado, setEstado] = useState({\n        countries : [],\n        activity:{},\n        activities: activities,\n    })\n\nuseEffect(() => {\n   dispatch(getAllActivities());\n}, [dispatch])\n\nconst handleInputChange = function(e) {\n    e.preventDefault();\n    setEstado({\n      ...estado,\n      [e.target.name]: e.target.value\n    });\n  }\n\n\n   \nconsole.log(activities)\n\n    return (\n        <div>\n           <select>\n           {                  \n\t\t\t\t\t\t\tactivities.map( act => (\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<option name={act.name} key={act.id} value={estado.activity}>                                   \n\t\t\t\t\t\t\t\t\t{act.name}                            \n\t\t\t\t\t\t\t\t</option>\t\t\t\t\t\t\t\t        \n\t\t\t\t\t\t\t))\n\t\t\t\t\t}\n           </select>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => ({\n    activities : state.activities\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities)\n"]},"metadata":{},"sourceType":"module"}